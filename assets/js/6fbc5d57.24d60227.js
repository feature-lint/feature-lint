"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[48],{7522:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return f}});var r=t(9901);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=u(t),f=i,g=m["".concat(l,".").concat(f)]||m[f]||p[f]||a;return t?r.createElement(g,o(o({ref:n},c),{},{components:t})):r.createElement(g,o({ref:n},c))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3051:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return m}});var r=t(5499),i=t(1805),a=(t(9901),t(7522)),o=["components"],s={sidebar_position:2},l="Ensure Name",u={unversionedId:"configuration/rules/ensureName",id:"configuration/rules/ensureName",isDocsHomePage:!1,title:"Ensure Name",description:"The ensure name-rule ensures, that building blocks follow a specific naming pattern.",source:"@site/docs/configuration/rules/ensureName.md",sourceDirName:"configuration/rules",slug:"/configuration/rules/ensureName",permalink:"/feature-lint/configuration/rules/ensureName",editUrl:"https://github.com/feature-lint/feature-lint/docs/configuration/rules/ensureName.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Dependencies",permalink:"/feature-lint/configuration/rules/dependencies"},next:{title:"No  missing feature-types",permalink:"/feature-lint/configuration/rules/no-unknown-ft"}},c=[{value:"Reasoning",id:"reasoning",children:[]},{value:"Implementation",id:"implementation",children:[]}],p={toc:c};function m(e){var n=e.components,t=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ensure-name"},"Ensure Name"),(0,a.kt)("p",null,"The ensure name-rule ensures, that building blocks follow a specific naming pattern."),(0,a.kt)("h2",{id:"reasoning"},"Reasoning"),(0,a.kt)("p",null,"In projects working with many persons beeing involved, it's neat to have all the persons adhere to some\nnaming conventions. This is where this rule can help."),(0,a.kt)("h2",{id:"implementation"},"Implementation"),(0,a.kt)("p",null,"The rule is applicable in the ",(0,a.kt)("strong",{parentName:"p"},"building blocks")," section of the configuration.\nIts name is ",(0,a.kt)("strong",{parentName:"p"},"ensure-name"),". The rule takes a second parameter called ",(0,a.kt)("strong",{parentName:"p"},"regEx")," which determines\nthe pattern, a file in this specific building-block should have."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "$schema": "https://raw.githubusercontent.com/feature-lint/feature-lint/pages/schema/feature-lint-v0.0.15.schema.json"\n  "rootDir": "./src",\n  "featureTypes": {\n    "angular": {\n      "featureNameMatcher": "angular-.*",\n      "buildingBlocks": {\n        "service": {\n          "rules": [\n            {\n              "name": "ensure-name",\n              "regEx": ".*\\\\.service\\\\.ts"\n            }\n          ]\n        },\n        "components": {}\n      }\n    }\n  }\n}\n')),(0,a.kt)("p",null,"The regEx is the ",(0,a.kt)("a",{parentName:"p",href:"https://regex101.com/"},"Regular Expression")," pattern, which is applied to each\nof the files inside the corresponding building block directory."),(0,a.kt)("p",null,"The example from above therefore matches all files inside"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"src/\n  angular-dialog/\n     services/\n        my-dialog.service.ts // this parses the rule\n        my-dialog.ts // this fails the rule\n")),(0,a.kt)("p",null,"to match a ",(0,a.kt)("inlineCode",{parentName:"p"},".service.ts")," naming convention."))}m.isMDXComponent=!0}}]);